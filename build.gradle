buildscript {
  repositories {
    mavenLocal()
    maven { url 'https://projectlombok.org/edge-releases' }
    maven {
      url uri(project.properties.sympowerMavenRepoPublicUrl)
      credentials {
        username "$sympowerMavenRepoUsername"
        password "$sympowerMavenRepoPassword"
      }
    }
  }
}

plugins {
  id 'java'
}

group 'net.sympower'
version '1.18.8-v1-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
  mavenLocal()
  mavenCentral()
  maven { url 'https://projectlombok.org/edge-releases' }
  jcenter()
}

apply plugin: 'java'
apply plugin: 'maven-publish'

publishing {
  repositories {
    maven {
      credentials {
        username "$sympowerMavenRepoUsername"
        password "$sympowerMavenRepoPassword"
      }
      url = version.endsWith('SNAPSHOT') ? "${sympowerMavenRepoSnapshotsUrl}" : "${sympowerMavenRepoReleasesUrl}"
    }
  }
  publications {
    mavenJava(MavenPublication) {
      from components.java
    }
  }
}

configurations {
  lombok
  compileOnly
}

def unpackedAndRenamedLombokDir = file("$buildDir/lombok")

task unpackAndRenameLombok {
  inputs.files configurations.lombok
  outputs.dir unpackedAndRenamedLombokDir
  doFirst {
    mkdir unpackedAndRenamedLombokDir
    delete unpackedAndRenamedLombokDir.listFiles()
  }
  doLast {
    copy {
      from zipTree(configurations.lombok.singleFile)
      into unpackedAndRenamedLombokDir
      rename "(.*)[.]SCL[.]lombok", '$1.class'
    }
  }
}

tasks.compileJava {
  dependsOn unpackAndRenameLombok
}

dependencies {
  compileOnly files("${System.properties['java.home']}/../lib/tools.jar")
  compileOnly "org.kohsuke.metainf-services:metainf-services:1.8"
  compileOnly "org.eclipse.jdt:org.eclipse.jdt.core:3.10.0"
  compileOnly 'javax.inject:javax.inject:1'
  lombok 'org.projectlombok:lombok:edge-SNAPSHOT'
  compileOnly files(unpackedAndRenamedLombokDir)

  testCompile group: 'junit', name: 'junit', version: '4.12'
}
